<templateSet group="John.groovy">
  <template name="ext" value="ext {&#10;    // sdk and tools&#10;    minSdkVersion = 15&#10;    targetSdkVersion = 26&#10;    compileSdkVersion = 26&#10;    buildToolsVersion = '26.0.1'&#10;&#10;    // library versions&#10;    supportLibraryVersion = '26.0.0'&#10;    butterknifeVersion = '8.8.1'&#10;    guavaVersion = '23.2'&#10;    constraitLayoutVersion = '1.0.2'&#10;    junitVersion = '4.12'&#10;    espressoVersion = '2.2.2'&#10;    retrofitVersion = '2.2.0'&#10;    okhttpVersion = '3.9.0'&#10;    rxjavaVersion = '2.1.5 '&#10;    rxandroidVersion = '2.0.1'&#10;    eventbusVersion = '3.0.0'&#10;    daggerVersion = &quot;2.12&quot;&#10;    gsonVersion = &quot;2.8.2&quot;&#10;    mockitoVersion = &quot;1.10.19&quot;&#10;    timberVersion = &quot;4.5.1&quot;&#10;    glideVersion = &quot;4.2.0&quot;&#10;    circleImageViewVersion = &quot;2.1.0&quot;&#10;}" description="ext" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="libbg" value="apply plugin: 'com.android.library'&#10;&#10;android {&#10;    compileSdkVersion rootProject.ext.compileSdkVersion&#10;    buildToolsVersion rootProject.ext.buildToolsVersion&#10;&#10;    defaultConfig {&#10;        minSdkVersion rootProject.ext.minSdkVersion&#10;        targetSdkVersion rootProject.ext.targetSdkVersion&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;&#10;&#10;    }&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;    compile fileTree(dir: 'libs', include: ['*.jar'])&#10;    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {&#10;        exclude group: 'com.android.support', module: 'support-annotations'&#10;    })&#10;    compile &quot;com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion&quot;&#10;    testCompile &quot;junit:junit:$rootProject.ext.junitVersion&quot;&#10;}&#10;" description="library build.gradle file template" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="appbg" value="apply plugin: 'com.android.application'&#10;&#10;&#10;android {&#10;    compileSdkVersion rootProject.ext.compileSdkVersion&#10;    buildToolsVersion rootProject.ext.buildToolsVersion&#10;&#10;    defaultConfig {&#10;        applicationId &quot;$CONTENT$&quot;&#10;&#10;        minSdkVersion 15&#10;        targetSdkVersion 26&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;&#10;&#10;    }&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;    compile fileTree(dir: 'libs', include: ['*.jar'])&#10;    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {&#10;        exclude group: 'com.android.support', module: 'support-annotations'&#10;    })&#10;    compile &quot;com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion&quot;&#10;    compile &quot;com.android.support.constraint:constraint-layout:$rootProject.ext.constraitLayoutVersion&quot;&#10;    testCompile &quot;junit:junit:$rootProject.ext.junitVersion&quot;&#10;}&#10;" description="app build.gradle file template" toReformat="false" toShortenFQNames="true">
    <variable name="CONTENT" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="vistegdependency" value="classpath 'cz.malohlava:visteg:1.0.3'" description="add visteg dependency at root dependencies" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="vistegplugin" value="apply plugin: 'cz.malohlava.visteg'" description="add visteg plugin" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="vistegconfig" value="// 1. 执行任意一个任务&#10;// 2. 通过以下命令可以转换成png图片, 需要安装graphviz&#10;// $&gt; cd build/reports/&#10;// $&gt; dot -Tpng ./visteg.dot -o ./visteg.dot.png&#10;visteg {&#10;    enabled        = true&#10;    colouredNodes  = true&#10;    colouredEdges  = true&#10;    destination    = 'build/reports/visteg.dot'&#10;    exporter       = 'dot'&#10;    colorscheme    = 'ylgn9'&#10;    nodeShape      = 'box'&#10;    startNodeShape = 'hexagon'&#10;    endNodeShape   = 'doubleoctagon'&#10;}" description="add visteg config" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="xp" value="buildscript {&#10;    apply from: 'versions.gradle'&#10;    addRepos(repositories)&#10;    dependencies {&#10;        classpath deps.android_gradle_plugin&#10;        classpath deps.kotlin_gradle_plugin&#10;    }&#10;}&#10;&#10;allprojects {&#10;    addRepos(repositories)&#10;}&#10;&#10;task clean(type: Delete) {&#10;    delete rootProject.buildDir&#10;}&#10;&#10;apply from: 'config.gradle'" description="androidx project build.gradle file template" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="xm" value="apply plugin: 'com.android.application'&#10;apply plugin: 'kotlin-android'&#10;apply plugin: 'kotlin-android-extensions'&#10;apply plugin: 'kotlin-kapt'&#10;&#10;android {&#10;    compileSdkVersion tools.target_sdk&#10;    buildToolsVersion = tools.build_tools&#10;    defaultConfig {&#10;        applicationId app.app_id&#10;        minSdkVersion tools.min_sdk&#10;        targetSdkVersion tools.target_sdk&#10;        versionCode app.version_code&#10;        versionName app.version_name&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = tools.java&#10;        targetCompatibility = tools.java&#10;    }&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation fileTree(dir: 'libs', include: ['*.jar'])&#10;    implementation deps.kotlin.stdlib&#10;    implementation deps.support.core_ktx&#10;    implementation deps.support.appcompat&#10;    implementation deps.constraint_layout&#10;    implementation deps.timber&#10;    implementation deps.dagger.runtime&#10;    implementation deps.support.design&#10;    kapt deps.dagger.compiler&#10;    implementation deps.butterknife.runtime&#10;    kapt deps.butterknife.compiler&#10;    testImplementation deps.junit&#10;    androidTestImplementation deps.atsl.runner&#10;    androidTestImplementation deps.espresso.core&#10;}&#10;" description="androidx module build.gradle template" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="xc" value="// version config&#10;def major = 1&#10;def minor = 0&#10;def patch = 0&#10;&#10;// app config&#10;def app = [:]&#10;app.app_id = &quot;$COMPLETE$&quot;&#10;app.version_code = major * 10000 + minor * 100 + patch&#10;app.version_name = &quot;${major}.${minor}.${patch}&quot;&#10;ext.app = app" description="androidx config.gradle template" toReformat="false" toShortenFQNames="true">
    <variable name="COMPLETE" expression="completeSmart()" defaultValue="cn.cdtft.android" alwaysStopAt="true" />
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="mvvm gradle" value="apply plugin: 'com.android.application'&#10;apply plugin: 'kotlin-android'&#10;apply plugin: 'kotlin-kapt'&#10;&#10;android {&#10;    compileSdkVersion 30&#10;&#10;    defaultConfig {&#10;        applicationId &quot;com.cherry.algorithm&quot;&#10;        minSdkVersion 21&#10;        targetSdkVersion 30&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        vectorDrawables.useSupportLibrary = true&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildFeatures {&#10;        viewBinding true&#10;        dataBinding true&#10;    }&#10;&#10;    compileOptions {&#10;        sourceCompatibility 1.8&#10;        targetCompatibility 1.8&#10;    }&#10;&#10;    kotlinOptions {&#10;        jvmTarget = &quot;1.8&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation fileTree(dir: &quot;libs&quot;, include: [&quot;*.jar&quot;])&#10;    implementation &quot;org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version&quot;&#10;    implementation 'androidx.core:core-ktx:1.3.1'&#10;    implementation 'androidx.appcompat:appcompat:1.2.0'&#10;    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-rc1'&#10;    implementation 'androidx.recyclerview:recyclerview:1.1.0'&#10;    implementation 'androidx.legacy:legacy-support-v4:1.0.0'&#10;    implementation 'com.google.android.material:material:1.3.0-alpha02'&#10;    implementation &quot;androidx.lifecycle:lifecycle-extensions:2.2.0&quot;&#10;    implementation &quot;androidx.lifecycle:lifecycle-livedata-ktx:2.2.0&quot;&#10;    implementation &quot;androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0&quot;&#10;    implementation &quot;androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0&quot;&#10;    implementation &quot;androidx.room:room-runtime:2.2.5&quot;&#10;    implementation &quot;androidx.activity:activity-ktx:1.1.0&quot;&#10;    kapt &quot;androidx.room:room-compiler:2.2.5&quot;&#10;    androidTestImplementation 'junit:junit:4.13'&#10;    androidTestImplementation 'androidx.test.ext:junit:1.1.1'&#10;    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'&#10;    androidTestImplementation &quot;androidx.test:core-ktx:1.2.0&quot;&#10;    androidTestImplementation &quot;androidx.test.ext:junit-ktx:1.1.1&quot;&#10;    androidTestImplementation &quot;androidx.test:rules:1.2.0&quot;&#10;}" description="mvvm gradle configuration" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="GROOVY_DECLARATION" value="true" />
      <option name="GROOVY_EXPRESSION" value="true" />
      <option name="GROOVY_STATEMENT" value="true" />
    </context>
  </template>
  <template name="repo" value="repositories {&#10;    maven { url 'https://maven.aliyun.com/repository/google/' }&#10;    maven { url 'https://maven.aliyun.com/repository/jcenter/' }&#10;    google()&#10;    jcenter()&#10;    mavenCentral()&#10;}" description="custom repositories" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="lintconfig" value="android {&#10;   lintOptions {&#10;         // set to true to turn off analysis progress reporting by lint&#10;         quiet true&#10;         // if true, stop the gradle build if errors are found&#10;         abortOnError false&#10;         // set to true to have all release builds run lint on issues with severity=fatal&#10;         // and abort the build (controlled by abortOnError above) if fatal issues are found&#10;         checkReleaseBuilds true&#10;         // if true, only report errors&#10;         ignoreWarnings true&#10;         // if true, emit full/absolute paths to files with errors (true by default)&#10;         //absolutePaths true&#10;         // if true, check all issues, including those that are off by default&#10;         checkAllWarnings true&#10;         // if true, treat all warnings as errors&#10;         warningsAsErrors true&#10;         // turn off checking the given issue id's&#10;         disable 'TypographyFractions','TypographyQuotes'&#10;         // turn on the given issue id's&#10;         enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'&#10;         // check *only* the given issue id's&#10;         check 'NewApi', 'InlinedApi'&#10;         // if true, don't include source code lines in the error output&#10;         noLines true&#10;         // if true, show all locations for an error, do not truncate lists, etc.&#10;         showAll true&#10;         // whether lint should include full issue explanations in the text error output&#10;         explainIssues false&#10;         // Fallback lint configuration (default severities, etc.)&#10;         lintConfig file(&quot;default-lint.xml&quot;)&#10;         // if true, generate a text report of issues (false by default)&#10;         textReport true&#10;         // location to write the output; can be a file or 'stdout' or 'stderr'&#10;         //textOutput 'stdout'&#10;         textOutput file(&quot;lint-results.txt&quot;)&#10;         // if true, generate an XML report for use by for example Jenkins&#10;         xmlReport true&#10;         // file to write report to (if not specified, defaults to lint-results.xml)&#10;         xmlOutput file(&quot;lint-report.xml&quot;)&#10;         // if true, generate an HTML report (with issue explanations, sourcecode, etc)&#10;         htmlReport true&#10;         // optional path to report (default will be lint-results.html in the builddir)&#10;         htmlOutput file(&quot;lint-report.html&quot;)&#10;         // Set the severity of the given issues to fatal (which means they will be&#10;         // checked during release builds (even if the lint target is not included)&#10;         fatal 'NewApi', 'InlineApi'&#10;         // Set the severity of the given issues to error&#10;         error 'Wakelock', 'TextViewEdits'&#10;         // Set the severity of the given issues to warning&#10;         warning 'ResourceAsColor'&#10;         // Set the severity of the given issues to ignore (same as disabling the check)&#10;         ignore 'TypographyQuotes'&#10;         // Set the severity of the given issues to informational&#10;         informational 'StopShip'&#10;         // Use (or create) a baseline file for issues that should not be reported&#10;         baseline file(&quot;lint-baseline.xml&quot;)&#10;         // Normally most lint checks are not run on test sources (except the checks&#10;         // dedicated to looking for mistakes in unit or instrumentation tests, unless&#10;         // ignoreTestSources is true). You can turn on normal lint checking in all&#10;         // sources with the following flag, false by default:&#10;         checkTestSources true&#10;         // Like checkTestSources, but always skips analyzing tests -- meaning that it&#10;         // also ignores checks that have explicitly asked to look at test sources, such&#10;         // as the unused resource check.&#10;         ignoreTestSources true&#10;         // Normally lint will skip generated sources, but you can turn it on with this flag&#10;         checkGeneratedSources true&#10;         // Normally lint will analyze all dependencies along with each module; this ensures&#10;         // that lint can correctly (for example) determine if a resource declared in a library&#10;         // is unused; checking only the library in isolation would not be able to identify this&#10;         // problem. However, this leads to quite a bit of extra computation; a library is&#10;         // analyzed repeatedly, for each module that it is used in.&#10;         checkDependencies false&#10;    }&#10;}" description="add lint config" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
  <template name="buildfeatures" value="buildFeatures {&#10;    aidl = false&#10;    buildConfig = false&#10;    compose = false&#10;    prefab = false&#10;    renderScript = false&#10;    resValues = false&#10;    shaders = false&#10;    viewBinding = false&#10;}" description="buildFeatures" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="GROOVY" value="true" />
    </context>
  </template>
</templateSet>